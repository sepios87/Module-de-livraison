class Voiture {
  VITESSE = 1 / 115000;
  index = 1;
  directions = [];
  static markers = 0;

  constructor(map, nomLivreur, infoLivr, dateDepart, START_POS, duration, color) {
    //création d'un marker en SVG
    const svgMarker = {
      path:
      "M 114.00,87.00 C 114.00,87.00 132.00,73.72 132.00,73.72 145.27,64.49 163.84,55.14 179.00,49.42 230.96,29.83 293.19,31.40 344.00,53.86 356.95,59.58 372.51,68.21 384.00,76.43 384.00,76.43 398.00,87.00 398.00,87.00 393.46,96.59 382.89,99.57 382.10,111.00 381.18,124.15 394.81,134.25 407.00,128.43 413.84,125.17 417.20,117.69 425.00,114.00 425.00,114.00 435.57,128.00 435.57,128.00 443.79,139.49 452.42,155.05 458.14,168.00 480.58,218.76 482.15,281.10 462.58,333.00 456.34,349.53 446.42,368.55 436.28,383.00 436.28,383.00 425.00,398.00 425.00,398.00 415.41,393.46 412.43,382.89 401.00,382.10 387.85,381.18 377.75,394.81 383.57,407.00 386.83,413.84 394.31,417.20 398.00,425.00 398.00,425.00 384.00,435.57 384.00,435.57 372.51,443.79 356.95,452.42 344.00,458.14 293.24,480.58 230.90,482.15 179.00,462.58 164.02,456.92 145.11,447.40 132.00,438.28 132.00,438.28 114.00,425.00 114.00,425.00 118.54,415.41 129.11,412.43 129.90,401.00 130.82,387.85 117.19,377.75 105.00,383.57 98.16,386.83 94.80,394.31 87.00,398.00 87.00,398.00 76.43,384.00 76.43,384.00 68.21,372.51 59.58,356.95 53.86,344.00 31.40,293.19 29.83,230.96 49.42,179.00 55.80,162.09 65.34,143.78 75.72,129.00 75.72,129.00 87.00,114.00 87.00,114.00 94.80,117.69 98.16,125.17 105.00,128.43 117.19,134.25 130.82,124.15 129.90,111.00 129.11,99.57 118.54,96.59 114.00,87.00 Z M 342.00,203.00 C 342.00,203.00 328.15,151.00 328.15,151.00 326.90,146.39 323.48,131.18 321.28,128.10 317.64,123.00 312.61,123.01 307.00,123.00 307.00,123.00 205.00,123.00 205.00,123.00 199.43,123.01 194.38,122.95 190.84,128.10 188.42,131.61 184.97,146.97 183.58,152.00 183.58,152.00 170.00,203.00 170.00,203.00 170.00,203.00 185.00,203.00 185.00,203.00 194.98,202.93 198.24,196.76 205.00,190.00 205.00,190.00 231.00,164.00 231.00,164.00 233.70,161.30 241.09,153.43 244.00,152.03 250.00,149.14 256.86,156.00 253.97,162.00 252.37,165.34 236.73,180.27 233.00,184.00 227.56,189.44 219.27,197.03 215.00,203.00 215.00,203.00 238.00,203.00 238.00,203.00 247.77,202.93 250.36,197.64 257.00,191.00 257.00,191.00 285.00,163.00 285.00,163.00 287.83,160.17 294.56,152.74 298.00,151.62 303.38,149.86 309.80,156.13 306.97,162.00 305.37,165.34 289.73,180.27 286.00,184.00 280.56,189.44 272.27,197.03 268.00,203.00 268.00,203.00 342.00,203.00 342.00,203.00 Z M 150.00,203.00 C 150.00,199.13 150.73,191.25 148.40,188.23 146.76,186.10 144.56,185.39 142.00,185.11 136.77,184.53 120.15,183.93 116.65,187.57 112.83,191.54 111.54,202.81 125.00,203.00 125.00,203.00 150.00,203.00 150.00,203.00 Z M 362.00,203.00 C 362.00,203.00 386.00,203.00 386.00,203.00 388.52,202.99 391.63,203.11 393.87,201.83 398.65,199.08 399.01,191.37 395.35,187.57 391.59,183.66 378.43,184.93 373.00,185.00 369.46,185.05 365.98,185.14 363.60,188.23 361.27,191.25 362.00,199.13 362.00,203.00 Z M 369.00,239.00 C 366.42,225.46 353.50,220.06 341.00,220.00 341.00,220.00 170.00,220.00 170.00,220.00 157.83,220.15 145.47,226.06 143.00,239.00 150.65,239.00 168.89,237.66 175.00,240.92 181.53,244.40 183.62,249.74 186.75,256.00 192.32,267.12 199.12,277.90 185.98,287.35 181.44,290.62 177.36,290.97 172.00,291.00 172.00,291.00 141.00,291.00 141.00,291.00 141.00,295.22 140.28,302.30 142.89,305.66 145.31,308.77 148.39,308.93 152.00,309.00 152.00,309.00 185.00,309.00 185.00,309.00 185.00,309.00 323.00,309.00 323.00,309.00 323.00,309.00 358.00,309.00 358.00,309.00 361.68,308.99 365.56,309.33 368.35,306.43 371.80,302.84 371.00,295.69 371.00,291.00 371.00,291.00 341.00,291.00 341.00,291.00 335.26,290.99 330.92,290.89 326.02,287.35 313.02,278.00 319.72,267.05 325.25,256.00 328.38,249.74 330.47,244.40 337.00,240.92 343.11,237.66 361.35,239.00 369.00,239.00 Z M 177.00,274.00 C 177.00,274.00 167.61,257.02 167.61,257.02 167.61,257.02 161.00,256.00 161.00,256.00 161.00,256.00 141.00,256.00 141.00,256.00 141.00,256.00 141.00,274.00 141.00,274.00 141.00,274.00 177.00,274.00 177.00,274.00 Z M 371.00,256.00 C 371.00,256.00 352.00,256.00 352.00,256.00 352.00,256.00 344.39,257.02 344.39,257.02 344.39,257.02 335.00,274.00 335.00,274.00 335.00,274.00 371.00,274.00 371.00,274.00 371.00,274.00 371.00,256.00 371.00,256.00 Z M 195.00,326.00 C 195.00,326.00 170.00,326.00 170.00,326.00 167.59,326.00 161.40,325.60 159.60,327.02 157.62,328.59 158.00,332.70 158.00,335.00 157.99,341.08 157.03,354.07 160.72,358.77 162.42,360.94 164.36,361.60 167.00,361.73 169.72,362.20 185.83,362.18 187.98,361.73 189.83,361.05 191.09,360.28 192.30,358.77 195.14,355.26 194.99,350.25 195.00,346.00 195.00,346.00 195.00,326.00 195.00,326.00 Z M 317.00,326.00 C 317.00,326.00 317.00,348.00 317.00,348.00 317.06,352.65 317.54,358.27 322.11,360.83 325.37,362.65 337.72,362.05 342.00,362.00 356.28,361.80 354.00,349.61 354.00,339.00 354.00,336.46 354.44,329.45 352.98,327.60 351.41,325.62 347.30,326.00 345.00,326.00 345.00,326.00 317.00,326.00 317.00,326.00 Z" ,
      fillColor: color,
      fillOpacity: 1,
      strokeWeight: 0,
      rotation: 0,
      scale: 0.07,
      anchor: new google.maps.Point(340, 340),
    };
    this.markerMap = new google.maps.Marker({
      position: START_POS,
      icon: svgMarker,
      map: map,
    });

    //description du marker quand on clique dessus
    const contentString =`<div id="content">
        <p>
          <b>${nomLivreur}</b><br>${infoLivr}<br>
          Heure de départ : ${dateDepart.getHours()}h ${dateDepart.getMinutes().toString().padStart(2, '0')}<br>
          Heure d'arrivé : ${new Date(dateDepart.getTime() + duration*1000).getHours()}h ${new Date(dateDepart.getTime() + duration*1000).getMinutes().toString().padStart(2, '0')}
        </p>
      </div>`;

    const infowindow = new google.maps.InfoWindow({
      content: contentString,
    });

    this.markerMap.addListener("click", () => {
      infowindow.open(map, this.markerMap);
    });

    Voiture.markers++;
  }

  //attribuer une direction a suivre a la voiture
  set ajouterDirections(directions) {
    this.directions = directions;
  }

  rouler() {
    this.avancement = setInterval(() => this.avancer(), 12);
  }

  avancer() {
    if (this.index >= this.directions.length) {
      clearInterval(this.avancement);
      //stoper le setInterval
    }
    else {
      let lat = Number(this.markerMap.getPosition().lat());
      let lng = Number(this.markerMap.getPosition().lng());

      //permet de suivre la route (ne pas avancer a sur les cotés en même temps)
      if (Math.abs(lat - this.directions[this.index].lat) > Math.abs(lng - this.directions[this.index].lng)){
        lat += this.changerDirection(lat, this.directions[this.index].lat);
      }
      else {
        lng += this.changerDirection(lng, this.directions[this.index].lng);
      }

      if (this.testDirectionSuivante(lat, lng, this.directions[this.index])) this.index++; //changer de point

      this.markerMap.setPosition(new google.maps.LatLng(lat, lng));
    }
  }

  changerDirection(valeur, direction) {
    if (Number(valeur) >= direction) return -this.VITESSE;
    else return this.VITESSE;
  }

  testDirectionSuivante(lat, lng, direction) {
    return (
      lat <= (direction.lat + 0.0001) &&
      lat >= (direction.lat - 0.0001) &&
      lng <= (direction.lng + 0.0001) &&
      lng >= (direction.lng - 0.0001)
    );
  }
}
